<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.acca.web.exam.dao.WebOrderDao">
    
	<sql id="appOfficialOrderColumns">
		a.order_id AS "orderId",
		a.del_flag AS "delFlag",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.exam_type AS "examType",
		a.acca_user_id AS "accaUserId",
		a.phone AS "phone",
		a.register_name AS "registerName",
		a.register_card_number AS "registerCardNumber",
		a.register_phone AS "registerPhone",
		a.register_email AS "registerEmail",
		a.register_white_color_img_id AS "registerWhiteColorImgId",
		a.acca_register_name AS "accaRegisterName",
		a.acca_register_password AS "accaRegisterPassword",
		a.org AS "org",
		a.exam_signup_time AS "examSignupTime",
		a.order_status AS "orderStatus",
		a.amount AS "amount",
		a.order_pay_img_id AS "orderPayImgId",
		a.check_person_id AS "checkPersonId",
		a.check_person_name AS "checkPersonName",
		a.check_time AS "checkTime",
		a.check_reason AS "checkReason",
		a.card_type AS "cardType",
		a.exam_time_str AS "examTimeStr",
		<include refid="FileMapper.image" />,
		<include refid="FileMapper.file" />	
	</sql>
		
	<sql id="appOfficialOrderJoins">
		left join tbl_attachment_file image on image.file_id = a.register_white_color_img_id
		left join tbl_attachment_file file on file.file_id = a.order_pay_img_id
	</sql>
	
	<resultMap type="WebOrder" id="WebOrderResult">
		<id column="orderId" property="orderId" />
		<result column="orderStatus" property="orderStatus" />
		<result column="registerName" property="registerName" />
		<result column="registerCardNumber" property="registerCardNumber" />
		<result column="phone" property="phone" />
		<result column="registerEmail" property="registerEmail" />
		<result column="accaRegisterName" property="accaRegisterName" />
		<result column="accaRegisterPassword" property="accaRegisterPassword" />
		<result column="org" property="org" />
		<result column="amount" property="amount" />
		<result column="registerPhone" property="registerPhone" />
		<result column="cardType" property="cardType" />
		<result column="examTimeStr" property="examTimeStr" />
		<result column="registerWhiteColorImgId" property="registerWhiteColorImgId" />
		<result column="accaUserId" property="accaUserId" />
		<result column="examType" property="examType" />
		
		<result column="checkPersonId" property="checkPersonId" />
		<result column="checkPersonName" property="checkPersonName" />
		<result column="checkTime" property="checkTime" />
		<result column="checkReason" property="checkReason" />
		
		<result column="image.id" property="image.id" />
		<result column="image.originalName" property="image.originalName" />
		<result column="image.newName" property="image.newName" />
		<result column="image.basePath" property="image.basePath" />
		<result column="image.relativePath" property="image.relativePath" />
		<result column="image.relativeUrl" property="image.relativeUrl" />
		<result column="image.mimeType" property="image.mimeType" />
		<result column="image.createTime" property="image.createTime" />
		<result column="image.updateTime" property="image.updateTime" />
		
		<result column="file.id" property="file.id" />
		<result column="file.originalName" property="file.originalName" />
		<result column="file.newName" property="file.newName" />
		<result column="file.basePath" property="file.basePath" />
		<result column="file.relativePath" property="file.relativePath" />
		<result column="file.relativeUrl" property="file.relativeUrl" />
		<result column="file.mimeType" property="file.mimeType" />
		<result column="file.createTime" property="file.createTime" />
		<result column="file.updateTime" property="file.updateTime" />
		
		<collection property="signups" ofType="WebSignup">
			<id column="examSignupId" property="examSignupId" />
			<result property="examCityName" column="examCityName" />
			<result property="examPlaceName" column="examPlaceName" />
			<result property="examStartTime" column="examStartTime" />
			<result property="examEndTime" column="examEndTime" />
			<result property="course" column="course" />
			<result property="examVersionJson" column="examVersionJson" />
			<result property="price" column="price" />
			<result property="examCourseId" column="examCourseId" />
			<result property="accaUserId" column="accaUserId" />
		</collection>
	</resultMap>
	
	<select id="getById" resultMap="WebOrderResult">
		SELECT 
			<include refid="appOfficialOrderColumns"/>,
			b.exam_signup_id examSignupId,b.price price, b.exam_version_json examVersionJson, b.exam_course course,
			b.exam_start_time examStartTime, b.exam_end_time examEndTime, 
			b.exam_city_name examCityName, b.exam_place_name examPlaceName,
			b.exam_course_id examCourseId, b.acca_user_id accaUserId
		FROM tbl_order a
		<include refid="appOfficialOrderJoins"/>
		left join tbl_exam_signup b on b.order_id = a.order_id<!-- 
		left join tbl_exam_course c on c.exam_course_id = b.exam_course_id
		left join tbl_exam d on b.exam_id = d.exam_id
		left join tbl_exam_place e on e.exam_place_id = d.exam_place_id -->
		WHERE 
			a.order_id = #{orderId}
	</select>
    
	<select id="get" resultMap="WebOrderResult">
		SELECT 
			<include refid="appOfficialOrderColumns"/>,
			b.exam_signup_id examSignupId,b.price price, b.exam_version_json examVersionJson, b.exam_course course,
			b.exam_start_time examStartTime, b.exam_end_time examEndTime, 
			b.exam_city_name examCityName, b.exam_place_name examPlaceName,
			b.exam_course_id examCourseId, b.acca_user_id accaUserId
		FROM tbl_order a
		<include refid="appOfficialOrderJoins"/>
		left join tbl_exam_signup b on b.order_id = a.order_id<!-- 
		left join tbl_exam_course c on c.exam_course_id = b.exam_course_id
		left join tbl_exam d on b.exam_id = d.exam_id
		left join tbl_exam_place e on e.exam_place_id = d.exam_place_id -->
		WHERE 
			<!-- a.del_flag = #{DEL_FLAG_NORMAL} 
			and --> a.order_id = #{orderId}
	</select>
	
	
	<select id="findlist111" resultMap="WebOrderResult">
		SELECT 
			<include refid="appOfficialOrderColumns"/>,
			b.price price, b.exam_version_json examVersionJson, b.exam_course course,
			b.exam_start_time examStartTime, b.exam_end_time examEndTime, 
			b.exam_city_name examCityName, b.exam_place_name examPlaceName,
			b.exam_course_id examCourseId, b.acca_user_id accaUserId
		FROM tbl_order a
		<include refid="appOfficialOrderJoins"/>
		left join tbl_exam_signup b on b.order_id = a.order_id<!-- 
		left join tbl_exam_course c on c.exam_course_id = b.exam_course_id
		left join tbl_exam d on b.exam_id = d.exam_id
		left join tbl_exam_place e on e.exam_place_id = d.exam_place_id -->
		WHERE a.order_id = #{orderId}
		and a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	
	<select id="findOne" resultType="WebOrder">
		select <include refid="appOfficialOrderColumns"/>
		FROM tbl_order a
		<include refid="appOfficialOrderJoins"/>
		<where>
			a.order_id = #{orderId}
			and a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
	</select>

	<select id="findExpireOrder" resultType="WebOrder">
		SELECT DISTINCT
		<include refid="appOfficialOrderColumns"/>
		FROM tbl_order a
		<include refid="appOfficialOrderJoins"/>
		LEFT JOIN tbl_exam_signup AS signup ON a.order_id = signup.order_id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			and (
			(a.order_status = 10 and #{expireDate} > a.create_date)
			or (a.order_status = 35 and #{expireDate} > a.check_time)
			)
		</where>
	</select>
	
	
	
	<select id="findList" resultType="WebOrder">
		SELECT DISTINCT
			<include refid="appOfficialOrderColumns"/>
		FROM tbl_order a
		<include refid="appOfficialOrderJoins"/>
		LEFT JOIN tbl_exam_signup AS signup ON a.order_id = signup.order_id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			and a.order_status = #{orderStatus}
			<if test="phone != null and phone != ''">
				AND a.phone LIKE 
					<if test="dbName == 'oracle'">'%'||#{phone}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{phone}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{phone},'%')</if>
			</if>
			<if test="registerName != null and registerName != ''">
				AND a.register_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{registerName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{registerName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{registerName},'%')</if>
			</if>
			<if test="expireDate != null">
				and #{expireDate} > a.create_date 
			</if>
			<if test="sqlMap.places != null and sqlMap.places != ''">
				AND signup.del_flag = '0'
				AND signup.exam_place_id in (${sqlMap.places})
			</if>
						
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<!-- 为订单账务审核准备  -->
	<select id="findOrderList" resultType="WebOrder">
		SELECT DISTINCT
			<include refid="appOfficialOrderColumns"/>
		FROM tbl_order a
		<include refid="appOfficialOrderJoins"/>
		LEFT JOIN tbl_exam_signup AS signup ON a.order_id = signup.order_id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			and a.order_pay_img_id  IS NOT NULL 
			<if test="phone != null and phone != ''">
				AND a.phone LIKE 
					<if test="dbName == 'oracle'">'%'||#{phone}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{phone}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{phone},'%')</if>
			</if>
			<if test="registerName != null and registerName != ''">
				AND a.register_name LIKE 
					<if test="dbName == 'oracle'">'%'||#{registerName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{registerName}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{registerName},'%')</if>
			</if>
			<if test="expireDate != null">
				and #{expireDate} > a.create_date 
			</if>
			<if test="sqlMap.places != null and sqlMap.places != ''">
				AND signup.del_flag = '0'
				AND signup.exam_place_id in (${sqlMap.places})
			</if>
						
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	
	
	<select id="findOrders" resultType="WebOrder">
		select a.order_id orderId, a.exam_signup_id examSignupId, a.exam_course course, a.exam_id examId, a.exam_type examType from tbl_exam_signup a
		<!-- left join tbl_exam_course b on a.exam_course_id = b.exam_course_id -->
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL} 
			<if test="sqlMap.idStr != null and sqlMap.idStr != ''">
				and a.order_id in (${sqlMap.idStr})
			</if>
			<if test="orderId != null and orderId != 0">
				and a.order_id = #{orderId}
			</if>
		</where>
	</select>
	
	<select id="findAllList" resultType="WebOrder">
		SELECT 
			<include refid="appOfficialOrderColumns"/>
		FROM tbl_order a
		<include refid="appOfficialOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO tbl_order(
			order_id,
			del_flag,
			create_by,
			create_date,
			update_by,
			update_date,
			exam_type,
			acca_user_id,
			phone,
			register_name,
			register_card_number,
			register_phone,
			register_email,
			register_white_color_img_id,
			acca_register_name,
			acca_register_password,
			exam_signup_time,
			order_status,
			amount,
			order_pay_img_id,
			check_person_id,
			check_person_name,
			check_time,
			check_reason
		) VALUES (
			#{orderId},
			#{delFlag},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{examType},
			#{accaUserId},
			#{phone},
			#{registerName},
			#{registerCardNumber},
			#{registerPhone},
			#{registerEmail},
			#{registerWhiteColorImgId},
			#{accaRegisterName},
			#{accaRegisterPassword},
			#{examSignupTime},
			#{orderStatus},
			#{amount},
			#{orderPayImgId},
			#{checkPersonId},
			#{checkPersonName},
			#{checkTime},
			#{checkReason}
		)
	</insert>
	
	<update id="update">
		UPDATE tbl_order SET 	
			order_id = #{orderId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			exam_type = #{examType},
			acca_user_id = #{accaUserId},
			phone = #{phone},
			register_name = #{registerName},
			register_card_number = #{registerCardNumber},
			register_phone = #{registerPhone},
			register_email = #{registerEmail},
			register_white_color_img_id = #{registerWhiteColorImgId},
			acca_register_name = #{accaRegisterName},
			acca_register_password = #{accaRegisterPassword},
			exam_signup_time = #{examSignupTime},
			order_status = #{orderStatus},
			amount = #{amount},
			order_pay_img_id = #{orderPayImgId},
			check_person_id = #{checkPersonId},
			check_person_name = #{checkPersonName},
			check_time = #{checkTime},
			check_reason = #{checkReason}
		WHERE id = #{id}
	</update>
	
	<update id="updOrderStatus">
		UPDATE tbl_order SET 
		update_date = #{updateDate}
		,order_status = #{orderStatus}
		<if test="checkReason != null and checkReason != ''">
			,check_reason = #{checkReason}
		</if>
		<if test="checkPersonId != null and checkPersonId != ''">
			,check_person_id = #{checkPersonId}
		</if>
		<if test="checkPersonName != null and checkPersonName != ''">
			,check_person_name = #{checkPersonName}
		</if>
		<if test="checkTime != null">
			,check_time = #{checkTime}
		</if>
		where order_id = #{orderId}
	</update>
	
	<update id="updSignupOrderStatus" parameterType="WebOrder">
		update tbl_exam_signup
		<set>
		  exam_signup_status = ${orderStatus}
		</set>
		where 
		exam_signup_id in
		<foreach collection="orders" item="item" index="index" open="(" close=")" separator=",">
			${item.examSignupId}
		</foreach>
	</update>
	
	<update id="updSignupStatus">
		update tbl_exam_signup
		<set>
		  exam_signup_status = ${orderStatus}
		</set>
		where order_id = #{orderId} and del_flag = #{DEL_FLAG_NORMAL}
	</update>
	
	<update id="delete">
		UPDATE tbl_order SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
		<update id="subUsedSeats">
			UPDATE tbl_exam 
			SET 	
				used_seats=used_seats-1 
			WHERE 
				exam_id = #{examId} 
			AND 
				exam_type = 1 
		</update>
	
</mapper>